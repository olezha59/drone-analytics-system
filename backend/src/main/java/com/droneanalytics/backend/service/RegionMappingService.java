package com.droneanalytics.backend.service;

import org.springframework.stereotype.Service;
import jakarta.annotation.PostConstruct;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Service
public class RegionMappingService {
    
    private Map<String, Long> centerCodeToRegionIdMap = new HashMap<>();
    
    @PostConstruct
    public void initRegionMapping() {
        // –ü–æ–ª–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ center_code (—Ä—É—Å—Å–∫–∏–µ) -> gid —Ä–µ–≥–∏–æ–Ω–æ–≤
        centerCodeToRegionIdMap.put("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—Å–∫–∏–π", 14L); // City of St. Petersburg
        centerCodeToRegionIdMap.put("–ú–æ—Å–∫–æ–≤—Å–∫–∏–π", 43L);         // Moscow City
        centerCodeToRegionIdMap.put("–†–æ—Å—Ç–æ–≤—Å–∫–∏–π", 58L);         // Rostov
        centerCodeToRegionIdMap.put("–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∏–π", 50L);      // Novosibirsk
        centerCodeToRegionIdMap.put("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥—Å–∫–∏–π", 66L);   // Sverdlovsk
        centerCodeToRegionIdMap.put("–°–∞–º–∞—Ä—Å–∫–∏–π", 62L);          // Samara
        centerCodeToRegionIdMap.put("–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∏–π", 21L);    // Kaliningrad
        centerCodeToRegionIdMap.put("–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π", 35L);       // Krasnoyarsk
        centerCodeToRegionIdMap.put("–ò—Ä–∫—É—Ç—Å–∫–∏–π", 18L);          // Irkutsk
        centerCodeToRegionIdMap.put("–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π", 28L);        // Khabarovsk
        centerCodeToRegionIdMap.put("–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫—Å–∫–∏–π", 56L);    // Primor'ye
        centerCodeToRegionIdMap.put("–ú–∞–≥–∞–¥–∞–Ω—Å–∫–∏–π", 40L);    // Magadan
        centerCodeToRegionIdMap.put("–¢—é–º–µ–Ω—Å–∫–∏–π", 73L);    // Tyumen'
        
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã –µ—Å–ª–∏ –Ω—É–∂–Ω—ã
        centerCodeToRegionIdMap.put("–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∏–π", 4L);       // Arkhangel'sk
        centerCodeToRegionIdMap.put("–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∏–π", 5L);        // Astrakhan'
        centerCodeToRegionIdMap.put("–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∏–π", 7L);        // Belgorod
        centerCodeToRegionIdMap.put("–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∏–π", 77L);      // Volgograd
        centerCodeToRegionIdMap.put("–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∏–π", 79L);        // Voronezh
        centerCodeToRegionIdMap.put("–ö–∞–∑–∞–Ω—Å–∫–∏–π", 68L);          // Tatarstan
        centerCodeToRegionIdMap.put("–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∏–π", 47L);      // Nizhegorod
        centerCodeToRegionIdMap.put("–û–º—Å–∫–∏–π", 51L);             // Omsk
        centerCodeToRegionIdMap.put("–ü–µ—Ä–º—Å–∫–∏–π", 55L);           // Perm'
        centerCodeToRegionIdMap.put("–°–∞—Ä–∞—Ç–æ–≤—Å–∫–∏–π", 63L);        // Saratov
        centerCodeToRegionIdMap.put("–ß–µ–ª—è–±–∏–Ω—Å–∫–∏–π", 11L);        // Chelyabinsk
        centerCodeToRegionIdMap.put("–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π", 81L);        // Yaroslavl'
    }
    
    public Long getRegionIdByCenterCode(String centerCode) {
        return centerCodeToRegionIdMap.get(centerCode);
    }
    
    /**
     * üìå –ù–∞–π—Ç–∏ –≤—Å–µ center_code –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ ID
     */
    public List<String> getCenterCodesByRegionId(Long regionId) {
        return centerCodeToRegionIdMap.entrySet().stream()
            .filter(entry -> regionId.equals(entry.getValue()))
            .map(Map.Entry::getKey)
            .collect(Collectors.toList());
    }
}