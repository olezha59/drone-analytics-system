package com.droneanalytics.backend.controller;

import org.springframework.web.bind.annotation.*;

import java.io.File;

@RestController
@RequestMapping("/api/admin")
@CrossOrigin(origins = "http://localhost:3000")
public class HealthCheckController {

    @GetMapping("/health/python")
    public String checkPython() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Python
            Process process = new ProcessBuilder("python3", "--version").start();
            int exitCode = process.waitFor();
            
            if (exitCode == 0) {
                return "‚úÖ Python 3 –¥–æ—Å—Ç—É–ø–µ–Ω";
            } else {
                return "‚ùå Python 3 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω";
            }
        } catch (Exception e) {
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Python: " + e.getMessage();
        }
    }

    @GetMapping("/health/script")
    public String checkScript() {
        String[] possiblePaths = {
            "parser_vscode.py",
            "../parser_vscode.py", 
            "../../parser_vscode.py",
            "backend/parser_vscode.py",
            "../backend/parser_vscode.py"
        };
        
        StringBuilder result = new StringBuilder("–ü–æ–∏—Å–∫ Python —Å–∫—Ä–∏–ø—Ç–∞:\\n");
        
        for (String path : possiblePaths) {
            File candidate = new File(path);
            result.append("üîç ").append(path).append(": ")
                  .append(candidate.exists() ? "‚úÖ –ù–ê–ô–î–ï–ù" : "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")
                  .append(" (").append(candidate.getAbsolutePath()).append(")\\n");
        }
        
        return result.toString();
    }
}
