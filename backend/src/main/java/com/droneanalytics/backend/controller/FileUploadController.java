package com.droneanalytics.backend.controller;

import com.droneanalytics.backend.service.FileUploadService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/api/admin")
@CrossOrigin(origins = "http://localhost:3000")
public class FileUploadController {

    private final FileUploadService fileUploadService;

    public FileUploadController(FileUploadService fileUploadService) {
        this.fileUploadService = fileUploadService;
    }

    @PostMapping("/upload-excel")
    public ResponseEntity<?> uploadExcelFile(@RequestParam("file") MultipartFile file) {
        try {
            System.out.println("üì• Received file upload request");
            System.out.println("üìÑ File name: " + file.getOriginalFilename());
            System.out.println("üìä File size: " + file.getSize());
            System.out.println("üîç Content type: " + file.getContentType());

            if (file.isEmpty()) {
                System.out.println("‚ùå File is empty");
                return ResponseEntity.badRequest().body("–§–∞–π–ª –ø—É—Å—Ç–æ–π");
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ Excel —Ñ–∞–π–ª
            String contentType = file.getContentType();
            String fileName = file.getOriginalFilename();
            
            System.out.println("üîç Checking file type...");
            
            boolean isExcelFile = (contentType != null && 
                    (contentType.equals("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet") || 
                     contentType.equals("application/vnd.ms-excel"))) ||
                    (fileName != null && 
                     (fileName.toLowerCase().endsWith(".xlsx") || 
                      fileName.toLowerCase().endsWith(".xls")));

            if (!isExcelFile) {
                System.out.println("‚ùå Invalid file type: " + contentType);
                return ResponseEntity.badRequest().body("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ Excel —Ñ–∞–π–ª—ã (.xlsx, .xls)");
            }

            System.out.println("‚úÖ File validation passed, starting processing...");

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä
            String result = fileUploadService.processExcelFile(file);

            Map<String, String> response = new HashMap<>();
            response.put("message", "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω");
            response.put("details", result);
            response.put("filename", file.getOriginalFilename());
            response.put("size", String.valueOf(file.getSize()));

            System.out.println("‚úÖ File processing completed successfully");
            return ResponseEntity.ok(response);

        } catch (Exception e) {
            System.err.println("‚ùå Error processing file: " + e.getMessage());
            e.printStackTrace();
            
            Map<String, String> errorResponse = new HashMap<>();
            errorResponse.put("message", "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞");
            errorResponse.put("error", e.getMessage());
            return ResponseEntity.internalServerError().body(errorResponse);
        }
    }
}
