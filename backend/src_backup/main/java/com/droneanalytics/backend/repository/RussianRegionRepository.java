package com.droneanalytics.backend.repository;

import com.droneanalytics.backend.entity.RussianRegion;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;

@Repository
public interface RussianRegionRepository extends JpaRepository<RussianRegion, Long> {
    
    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
     */
    Optional<RussianRegion> findByName(String name);
    
    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω—ã –ø–æ —Ç–∏–ø—É (–û–±–ª–∞—Å—Ç—å, –†–µ—Å–ø—É–±–ª–∏–∫–∞ –∏ —Ç.–¥.)
     */
    List<RussianRegion> findByRegionType(String regionType);
    
    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –ø–æ ISO –∫–æ–¥—É (RU-MOS, RU-SPE –∏ —Ç.–¥.)
     */
    Optional<RussianRegion> findByIsoCode(String isoCode);
    
    /**
     * üìå –ü–æ–∏—Å–∫ —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ —á–∞—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
     */
    List<RussianRegion> findByNameContainingIgnoreCase(String namePart);
    
    // ========================
    // –ì–ï–û–ü–†–û–°–¢–†–ê–ù–°–¢–í–ï–ù–ù–´–ï –ó–ê–ü–†–û–°–´
    // ========================
    
    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (–≥–µ–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç PostGIS —Ñ—É–Ω–∫—Ü–∏—é ST_Within
     */
    @Query(value = "SELECT rr FROM RussianRegion rr WHERE ST_Within(:point, rr.geom) = true")
    Optional<RussianRegion> findRegionByCoordinates(@Param("point") org.locationtech.jts.geom.Point point);
    
    /**
     * üìå –ù–∞–π—Ç–∏ –≤—Å–µ –ø–æ–ª–µ—Ç—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–µ–≥–∏–æ–Ω–∞ (—á–µ—Ä–µ–∑ JOIN)
     * –°–ª–æ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–æ–µ–¥–∏–Ω—è—é—â–∏–π –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã
     */
    @Query(value = "SELECT rr.name, COUNT(fr) as flightCount " +
                   "FROM RussianRegion rr " +
                   "LEFT JOIN FlightRecord fr ON ST_Within(fr.takeoffCoords, rr.geom) = true " +
                   "WHERE fr.flightDate BETWEEN :start AND :end " +
                   "GROUP BY rr.id, rr.name " +
                   "ORDER BY flightCount DESC")
    List<Object[]> getFlightsCountByRegion(@Param("start") java.time.LocalDate start, 
                                         @Param("end") java.time.LocalDate end);
    
    /**
     * üìå –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
     */
    @Query(value = "SELECT rr.name, rr.regionType, COUNT(fr) as flights, " +
                   "AVG(fr.flightDurationMinutes) as avgDuration " +
                   "FROM RussianRegion rr " +
                   "LEFT JOIN FlightRecord fr ON ST_Within(fr.takeoffCoords, rr.geom) = true " +
                   "GROUP BY rr.id, rr.name, rr.regionType " +
                   "ORDER BY flights DESC")
    List<Object[]> getRegionStatistics();
}