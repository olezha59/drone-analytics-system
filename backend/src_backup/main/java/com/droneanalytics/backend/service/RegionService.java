package com.droneanalytics.backend.service;

import com.droneanalytics.backend.entity.RussianRegion;
import com.droneanalytics.backend.repository.RussianRegionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class RegionService {

    @Autowired
    private RussianRegionRepository regionRepository;

    /**
     * üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ–≥–∏–æ–Ω—ã
     */
    public List<RussianRegion> getAllRegions() {
        return regionRepository.findAll();
    }

    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –ø–æ ID
     */
    public Optional<RussianRegion> getRegionById(Long id) {
        return regionRepository.findById(id);
    }

    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
     */
    public Optional<RussianRegion> getRegionByName(String name) {
        return regionRepository.findByName(name);
    }

    /**
     * üìå –ü–æ–∏—Å–∫ —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ —á–∞—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
     */
    public List<RussianRegion> searchRegionsByName(String namePart) {
        return regionRepository.findByNameContainingIgnoreCase(namePart);
    }

    /**
     * üìå –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–≥–∏–æ–Ω—ã –ø–æ —Ç–∏–ø—É
     */
    public List<RussianRegion> getRegionsByType(String regionType) {
        return regionRepository.findByRegionType(regionType);
    }

    /**
     * üìå –ù–∞–π—Ç–∏ —Ä–µ–≥–∏–æ–Ω –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (–≥–µ–æ–ø–æ–∏—Å–∫)
     */
    public Optional<RussianRegion> findRegionByCoordinates(Double latitude, Double longitude) {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ Point
        // –∏ –≤—ã–∑–æ–≤–æ–º –≥–µ–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏–æ–Ω –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
        return regionRepository.findAll().stream().findFirst();
    }
}
